version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: miuchichat-postgres-prod
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-miuchichat}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-miuchichat}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - miuchichat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-miuchichat}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Meilisearch
  meilisearch:
    image: getmeili/meilisearch:v1.5
    container_name: miuchichat-meilisearch-prod
    environment:
      MEILI_MASTER_KEY: ${MEILISEARCH_API_KEY}
      MEILI_ENV: production
      MEILI_NO_ANALYTICS: true
    volumes:
      - meilisearch_data:/meili_data
    networks:
      - miuchichat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7700/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    image: ghcr.io/${GITHUB_REPOSITORY:-miuchi/miuchi.chat}:latest
    container_name: miuchichat-backend-prod
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-miuchichat}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-miuchichat}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      JWT_SECRET: ${JWT_SECRET}
      RUST_LOG: ${RUST_LOG:-info}
      MEILISEARCH_URL: http://meilisearch:7700
      MEILISEARCH_API_KEY: ${MEILISEARCH_API_KEY}
    ports:
      - "3001:3000"
    depends_on:
      postgres:
        condition: service_healthy
      meilisearch:
        condition: service_healthy
    networks:
      - miuchichat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    image: ghcr.io/${GITHUB_REPOSITORY:-miuchi/miuchi.chat}-frontend:latest
    container_name: miuchichat-frontend-prod
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - miuchichat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Reverse Proxy (Nginx)
  proxy:
    image: nginx:alpine
    container_name: miuchichat-proxy-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - miuchichat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  meilisearch_data:
    driver: local

networks:
  miuchichat-network:
    driver: bridge